library(data.table)
library(caret)
install.packages("pbkrtest")
setwd("~/Documents/StudyWork/Kaggle/House_Pricing/CODES")
library(dplyr)
library(data.table)
install.packages("dplyr")
library(dplyr)
library(data.table)
train = read.csv("../RAW/train.csv", header = TRUE)
summary(train$LotArea)
quantile(train$LotArea,seq(0:1,0.01))
quantile(train$LotArea,seq(0,1,0.01))
quantile(train$LotArea,seq(0,1,0.1))
quantile(train$EnclosedPorch,seq(0,1,0.1))
quantile(train$OpenPorchSF,seq(0,1,0.1))
quantile(train$BsmtFinSF2,seq(0,1,0.05))
summary(train)
dat = copy(train)
quantile(train$GrLivArea,seq(0,1,0.05))
test = read.csv("../RAW/test.csv", header = TRUE)
quantile(test$GrLivArea,seq(0,1,0.05))
quantile(test$GrLivArea,seq(0,1,0.02))
quantile(train$GrLivArea,seq(0,1,0.02))
source("./lib.R")
drops=c('MoSoldQtrQ4','YearRemodeDecile(2007,2010]','YearBuiltCombinedOlder than 1900','SaleConditionPartial',
'SaleTypeWD','FenceNo Fence','PavedDriveY','GarageCondNo Garage','GarageCondTA','GarageQualTA','GarageQualNo Garage',
'GarageFinishNo Garage','FireplaceQuTA','FunctionalTyp','KitchenQualTA','X1stFlrSF','ElectricalSBrkr',
'CentralAirY','HeatingQCTA','HeatingWall','BsmtFinType2No Basement','BsmtFinType1No Basement','BsmtExposureNo Basement',
'BsmtCondNo Basement','FoundationWood','ExterCondPo','ExterQualTA','MasVnrTypeStone','Exterior2ndWd Shng',
'Exterior2ndCBlock','Exterior1stWdShing','RoofMatlWdShngl','RoofStyleShed','Condition1RRNn',
'NeighborhoodVeenker','LandSlopeSev','LotConfigInside','LandContourLvl','LotShapeReg','AlleyPave',
'MSZoningRM','BsmtFinType1Unf','BsmtQualTA','GarageFinishUnf','GarageTypeNo Garage','TotalBsmtSF','BsmtCondTA',
'Exterior1stAsphShn','BsmtExposureNo','HeatingFloor','HeatingQCPo','FunctionalSev','MSSubClass190',
'BldgTypeTwnhsE','BldgType2fmCon','BldgTypeDuplex')
sort(drops)
quantile(train$TotalBsmtSF,seq(0,1,0.02))
levels(train$RoofStyle)
source("./lib.R")
train = read.csv("../RAW/train.csv", header = TRUE)
test = read.csv("../RAW/test.csv", header = TRUE)
train <- treat.missing.values(dat=train)
test <- treat.missing.values(dat=test)
train$MSSubClass <- as.factor(train$MSSubClass)
test$MSSubClass <- as.factor(test$MSSubClass)
train <- data.table(train)
test <- data.table(test)
train <- bin.variables(dat=train)
source("./lib.R")
train <- bin.variables(dat=train)
test <- bin.variables(dat=test)
train <- misc.features(dat=train)
class(dat$Exterior2nd)
unique(dat$Exterior2nd)
unique(dat$Exterior1st)
unique(dat$BsmtFinType1)
unique(dat$BsmtFinType2)
source("./lib.R")
train <- misc.features(dat=train)
test <- misc.features(dat=test)
rmv.cols <- c("Id", "Street","Condition2", "YearBuilt", "MiscFeature",
"GarageYrBlt", 'PoolQC','PoolArea',"YearRemodAdd",
"Utilities", "YrSold", "X1stFlrSF", "X2ndFlrSF", "LowQualFinSF",
"MSSubClass", "BsmtFinSF1", "BsmtFinSF2", "BsmtUnfSF", "MoSold",
"WoodDeckSF", "OpenPorchSF", "3SsnPorch")
dim(train);dim(test)
train[,(rmv.cols):=NULL]
test[,(rmv.cols):=NULL]
any(is.na(train))
any(is.na(test))
# Merging levels
train <- combine.levels(dat=train)
test <- combine.levels(dat=test)
class(train)
train = read.csv("../RAW/train.csv", header = TRUE)
test = read.csv("../RAW/test.csv", header = TRUE)
source("./lib.R")
train <- treat.missing.values(dat=train)
test <- treat.missing.values(dat=test)
# Binning some numeric variables and dropping the original cols
train$MSSubClass <- as.factor(train$MSSubClass)
test$MSSubClass <- as.factor(test$MSSubClass)
train <- data.table(train)
test <- data.table(test)
train <- bin.variables(dat=train)
test <- bin.variables(dat=test)
train <- misc.features(dat=train)
test <- misc.features(dat=test)
rmv.cols <- c("Id", "Street","Condition2", "YearBuilt", "MiscFeature",
"GarageYrBlt", 'PoolQC','PoolArea',"YearRemodAdd",
"Utilities", "YrSold", "X1stFlrSF", "X2ndFlrSF", "LowQualFinSF",
"MSSubClass", "BsmtFinSF1", "BsmtFinSF2", "BsmtUnfSF", "MoSold",
"WoodDeckSF", "OpenPorchSF", "3SsnPorch")
dim(train);dim(test)
train[,(rmv.cols):=NULL]
test[,(rmv.cols):=NULL]
colnames(train)
rmv.cols <- c("Id", "Street","Condition2", "YearBuilt", "MiscFeature",
"GarageYrBlt", 'PoolQC','PoolArea',"YearRemodAdd",
"Utilities", "YrSold", "X1stFlrSF", "X2ndFlrSF", "LowQualFinSF",
"MSSubClass", "BsmtFinSF1", "BsmtFinSF2", "BsmtUnfSF", "MoSold",
"WoodDeckSF", "OpenPorchSF", "X3SsnPorch")
dim(train);dim(test)
train[,(rmv.cols):=NULL]
test[,(rmv.cols):=NULL]
length(rmv.cols)
any(is.na(train))
any(is.na(test))
summary(test)
unlist(lapply(colnames(train), function(x) any(is.na(train$x))))
unlist(lapply(colnames(train), function(x) any(is.na(train[,x]))))
unlist(lapply(colnames(test), function(x) any(is.na(test[,x]))))
unlist(lapply(colnames(test), function(x) any(is.na(test[,get(x)]))))
colnames(tets)
colnames(test)
colnames(test)[unlist(lapply(colnames(test), function(x) any(is.na(test[,get(x)]))))]
summary(test$MSZoning)
summary(test$Exterior1st)
summary(test$Exterior2nd)
summary(test$TotalBsmtSF)
which(is.na(test$TotalBsmtSF))
test[661,]
test = read.csv("../RAW/test.csv", header = TRUE)
test[661,]
"Neighbourhood" %in% colnames(test)
which(is.na(test$Exterior1st))
test[692,]
summary(test$Exterior1st)
summary(test$Exterior2nd)
summary(train$Exterior1st)
levels(train$Exterior1st)
levels(test$Exterior1st)
levels(test$RoofStyle)
levels(train$RoofStyle)
